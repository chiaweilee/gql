{"version":3,"sources":["fields.js","schema.js","index.js"],"names":["fields","hello","type","GraphQLString","resolve","schema","GraphQLSchema","query","GraphQLObjectType","name","Footer","Layout","Sider","Content","TextArea","Input","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","result","input","bind","assertThisInitialized","e","setState","target","value","gql","_this2","graphql","then","_react_16_8_2_react_default","a","createElement","layout","width","theme","onChange","autosize","minRows","style","margin","height","JSON","stringify","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+QAEeA,EAAA,CACbC,MAAO,CACLC,UAAMC,EACNC,QAFK,WAGH,MAAO,WCKEC,EAPA,IAAIC,IAAc,CAC/BC,MAAO,IAAIC,IAAkB,CAC3BC,KAAM,gBACNT,aCCIU,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,MAAOC,EAAYF,IAAZE,QACfC,EAAaC,IAAbD,SAEFE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXlB,MAAO,GACPmB,OAAQ,IAEVR,EAAKS,MAAQT,EAAKS,MAAMC,KAAXT,OAAAU,EAAA,EAAAV,CAAAD,IANIA,qEASbY,GACJT,KAAKU,SAAS,CACZxB,MAAOuB,EAAEE,OAAOC,QAElBZ,KAAKa,oCAGD,IAAAC,EAAAd,KACJe,YAAQ/B,EAAQgB,KAAKI,MAAMlB,OAAO8B,KAAK,SAAAX,GACrCS,EAAKJ,SAAS,CAAEL,8CAKlB,OACEY,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC5B,EAAD,CAAO8B,MAAO,MAAOC,MAAO,SAC1BL,EAAAC,EAAAC,cAAC1B,EAAD,CACEmB,MAAOZ,KAAKI,MAAMlB,MAClBqC,SAAUvB,KAAKM,MACfkB,SAAU,CACRC,QAAS,OAIfR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC3B,EAAD,CAASkC,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,QACvCC,KAAKC,UAAUnD,IAElBsC,EAAAC,EAAAC,cAAC9B,EAAD,CAAQqC,MAAO,CAAEE,OAAQ,QACtBC,KAAKC,UAAU9B,KAAKI,MAAMC,kBAxCrB0B,IAAMC,WA+CxBC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe","file":"/gql/static/js/main.639a79bd.chunk.js","sourcesContent":["import { GraphQLString } from \"graphql\";\n\nexport default {\n  hello: {\n    type: GraphQLString,\n    resolve() {\n      return \"world\";\n    }\n  }\n};\n","import { GraphQLSchema, GraphQLObjectType } from \"graphql\";\n\nimport fields from \"./fields\";\n\nconst schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: \"RootQueryType\",\n    fields\n  })\n});\n\nexport default schema;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Input, Layout } from \"antd\";\nimport { graphql } from \"graphql\";\nimport \"antd/dist/antd.css\";\nimport schema from \"./schema\";\nimport fields from \"./fields\";\n\nconst { Footer, Sider, Content } = Layout;\nconst { TextArea } = Input;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      result: \"\"\n    };\n    this.input = this.input.bind(this);\n  }\n\n  input(e) {\n    this.setState({\n      query: e.target.value\n    });\n    this.gql();\n  }\n\n  gql() {\n    graphql(schema, this.state.query).then(result => {\n      this.setState({ result });\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Sider width={\"50%\"} theme={\"light\"}>\n          <TextArea\n            value={this.state.query}\n            onChange={this.input}\n            autosize={{\n              minRows: 35\n            }}\n          />\n        </Sider>\n        <Layout>\n          <Content style={{ margin: \"20px\", height: \"50%\" }}>\n            {JSON.stringify(fields)}\n          </Content>\n          <Footer style={{ height: \"50%\" }}>\n            {JSON.stringify(this.state.result)}\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
